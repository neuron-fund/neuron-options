/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalculatorTester,
  CalculatorTesterInterface,
} from "../CalculatorTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "availableCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "_vault",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_shortBurnAmount",
        type: "uint256",
      },
    ],
    name: "getAfterBurnCollateralRatio",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "value",
            type: "int256",
          },
        ],
        internalType: "struct FPI.FixedPointInt",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "availableCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "_vault",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_shortAmount",
        type: "uint256",
      },
    ],
    name: "getCollateralRequired",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "availableCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "_vault",
        type: "tuple",
      },
    ],
    name: "getExcessCollateral",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strike",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPut",
        type: "bool",
      },
    ],
    name: "getExpiredCashValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_otoken",
        type: "address",
      },
    ],
    name: "getExpiredPayoutRate",
    outputs: [
      {
        internalType: "uint256[]",
        name: "collateralsPayoutRate",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "availableCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "_vault",
        type: "tuple",
      },
    ],
    name: "getMaxShortAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_otoken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getPayout",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "longOtokenAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "availableCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "_vault",
        type: "tuple",
      },
    ],
    name: "isMarginableLong",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract OracleInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type CalculatorTesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalculatorTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalculatorTester__factory extends ContractFactory {
  constructor(...args: CalculatorTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _addressBook: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalculatorTester> {
    return super.deploy(
      _addressBook,
      overrides || {}
    ) as Promise<CalculatorTester>;
  }
  getDeployTransaction(
    _addressBook: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressBook, overrides || {});
  }
  attach(address: string): CalculatorTester {
    return super.attach(address) as CalculatorTester;
  }
  connect(signer: Signer): CalculatorTester__factory {
    return super.connect(signer) as CalculatorTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalculatorTesterInterface {
    return new utils.Interface(_abi) as CalculatorTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalculatorTester {
    return new Contract(address, _abi, signerOrProvider) as CalculatorTester;
  }
}
